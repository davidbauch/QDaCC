#pragma once

#include "global.h"
#include "typedef.h"

static Vector analytical_eigenvalues( const Dense& mat ) {
    const auto a11 = mat( 0, 0 );
    const auto a12 = mat( 0, 1 );
    const auto a13 = mat( 0, 2 );
    const auto a14 = mat( 0, 3 );
    const auto a21 = mat( 1, 0 );
    const auto a22 = mat( 1, 1 );
    const auto a23 = mat( 1, 2 );
    const auto a24 = mat( 1, 3 );
    const auto a31 = mat( 2, 0 );
    const auto a32 = mat( 2, 1 );
    const auto a33 = mat( 2, 2 );
    const auto a34 = mat( 2, 3 );
    const auto a41 = mat( 3, 0 );
    const auto a42 = mat( 3, 1 );
    const auto a43 = mat( 3, 2 );
    const auto a44 = mat( 3, 3 );

    const Scalar p_1_1 = a11 / 4 + a22 / 4 + a33 / 4 + a44 / 4 - sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 - 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1. / 3. ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 ) / 2 + sqrt( -4 * a11 * a22 / 3 - 4 * a11 * a33 / 3 - 4 * a11 * a44 / 3 + 4 * a12 * a21 / 3 + 4 * a13 * a31 / 3 + 4 * a14 * a41 / 3 - 4 * a22 * a33 / 3 - 4 * a22 * a44 / 3 + 4 * a23 * a32 / 3 + 4 * a24 * a42 / 3 - 4 * a33 * a44 / 3 + 4 * a34 * a43 / 3 + 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1. / 3. ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 2 + ( -2 * a11 * a22 * a33 - 2 * a11 * a22 * a44 + 2 * a11 * a23 * a32 + 2 * a11 * a24 * a42 - 2 * a11 * a33 * a44 + 2 * a11 * a34 * a43 + 2 * a12 * a21 * a33 + 2 * a12 * a21 * a44 - 2 * a12 * a23 * a31 - 2 * a12 * a24 * a41 - 2 * a13 * a21 * a32 + 2 * a13 * a22 * a31 + 2 * a13 * a31 * a44 - 2 * a13 * a34 * a41 - 2 * a14 * a21 * a42 + 2 * a14 * a22 * a41 - 2 * a14 * a31 * a43 + 2 * a14 * a33 * a41 - 2 * a22 * a33 * a44 + 2 * a22 * a34 * a43 + 2 * a23 * a32 * a44 - 2 * a23 * a34 * a42 - 2 * a24 * a32 * a43 + 2 * a24 * a33 * a42 + 2 * ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) ) / sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 - 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1. / 3. ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 ) ) / 2;

    const bool eq_1 = std::abs( std::pow( a11, 2 ) * std::pow( a22, 2 ) / 12 - std::pow( a11, 2 ) * a22 * a33 / 12 - std::pow( a11, 2 ) * a22 * a44 / 12 + std::pow( a11, 2 ) * a23 * a32 / 4 + std::pow( a11, 2 ) * a24 * a42 / 4 + std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 - std::pow( a11, 2 ) * a33 * a44 / 12 + std::pow( a11, 2 ) * a34 * a43 / 4 + std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 - a11 * a12 * a21 * a22 / 6 + a11 * a12 * a21 * a33 / 12 + a11 * a12 * a21 * a44 / 12 - a11 * a12 * a23 * a31 / 4 - a11 * a12 * a24 * a41 / 4 - a11 * a13 * a21 * a32 / 4 + a11 * a13 * a22 * a31 / 12 - a11 * a13 * a31 * a33 / 6 + a11 * a13 * a31 * a44 / 12 - a11 * a13 * a34 * a41 / 4 - a11 * a14 * a21 * a42 / 4 + a11 * a14 * a22 * a41 / 12 - a11 * a14 * a31 * a43 / 4 + a11 * a14 * a33 * a41 / 12 - a11 * a14 * a41 * a44 / 6 - a11 * std::pow( a22, 2 ) * a33 / 12 - a11 * std::pow( a22, 2 ) * a44 / 12 + a11 * a22 * a23 * a32 / 12 + a11 * a22 * a24 * a42 / 12 - a11 * a22 * std::pow( a33, 2 ) / 12 + a11 * a22 * a33 * a44 / 2 - 2 * a11 * a22 * a34 * a43 / 3 - a11 * a22 * std::pow( a44, 2 ) / 12 + a11 * a23 * a32 * a33 / 12 - 2 * a11 * a23 * a32 * a44 / 3 + 3 * a11 * a23 * a34 * a42 / 4 + 3 * a11 * a24 * a32 * a43 / 4 - 2 * a11 * a24 * a33 * a42 / 3 + a11 * a24 * a42 * a44 / 12 - a11 * std::pow( a33, 2 ) * a44 / 12 + a11 * a33 * a34 * a43 / 12 - a11 * a33 * std::pow( a44, 2 ) / 12 + a11 * a34 * a43 * a44 / 12 + std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 + a12 * a13 * a21 * a31 / 6 + a12 * a14 * a21 * a41 / 6 + a12 * a21 * a22 * a33 / 12 + a12 * a21 * a22 * a44 / 12 + a12 * a21 * a23 * a32 / 6 + a12 * a21 * a24 * a42 / 6 + a12 * a21 * std::pow( a33, 2 ) / 4 - 2 * a12 * a21 * a33 * a44 / 3 + 7 * a12 * a21 * a34 * a43 / 6 + a12 * a21 * std::pow( a44, 2 ) / 4 - a12 * a22 * a23 * a31 / 4 - a12 * a22 * a24 * a41 / 4 - a12 * a23 * a31 * a33 / 4 + 3 * a12 * a23 * a31 * a44 / 4 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + 3 * a12 * a24 * a33 * a41 / 4 - a12 * a24 * a41 * a44 / 4 + std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 + a13 * a14 * a31 * a41 / 6 - a13 * a21 * a22 * a32 / 4 - a13 * a21 * a32 * a33 / 4 + 3 * a13 * a21 * a32 * a44 / 4 - a13 * a21 * a34 * a42 + a13 * std::pow( a22, 2 ) * a31 / 4 + a13 * a22 * a31 * a33 / 12 - 2 * a13 * a22 * a31 * a44 / 3 + 3 * a13 * a22 * a34 * a41 / 4 + a13 * a23 * a31 * a32 / 6 + 7 * a13 * a24 * a31 * a42 / 6 - a13 * a24 * a32 * a41 + a13 * a31 * a33 * a44 / 12 + a13 * a31 * a34 * a43 / 6 + a13 * a31 * std::pow( a44, 2 ) / 4 - a13 * a33 * a34 * a41 / 4 - a13 * a34 * a41 * a44 / 4 + std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 - a14 * a21 * a22 * a42 / 4 - a14 * a21 * a32 * a43 + 3 * a14 * a21 * a33 * a42 / 4 - a14 * a21 * a42 * a44 / 4 + a14 * std::pow( a22, 2 ) * a41 / 4 + 3 * a14 * a22 * a31 * a43 / 4 - 2 * a14 * a22 * a33 * a41 / 3 + a14 * a22 * a41 * a44 / 12 - a14 * a23 * a31 * a42 + 7 * a14 * a23 * a32 * a41 / 6 + a14 * a24 * a41 * a42 / 6 - a14 * a31 * a33 * a43 / 4 - a14 * a31 * a43 * a44 / 4 + a14 * std::pow( a33, 2 ) * a41 / 4 + a14 * a33 * a41 * a44 / 12 + a14 * a34 * a41 * a43 / 6 + std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 - std::pow( a22, 2 ) * a33 * a44 / 12 + std::pow( a22, 2 ) * a34 * a43 / 4 + std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 - a22 * a23 * a32 * a33 / 6 + a22 * a23 * a32 * a44 / 12 - a22 * a23 * a34 * a42 / 4 - a22 * a24 * a32 * a43 / 4 + a22 * a24 * a33 * a42 / 12 - a22 * a24 * a42 * a44 / 6 - a22 * std::pow( a33, 2 ) * a44 / 12 + a22 * a33 * a34 * a43 / 12 - a22 * a33 * std::pow( a44, 2 ) / 12 + a22 * a34 * a43 * a44 / 12 + std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 + a23 * a24 * a32 * a42 / 6 + a23 * a32 * a33 * a44 / 12 + a23 * a32 * a34 * a43 / 6 + a23 * a32 * std::pow( a44, 2 ) / 4 - a23 * a33 * a34 * a42 / 4 - a23 * a34 * a42 * a44 / 4 + std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 - a24 * a32 * a33 * a43 / 4 - a24 * a32 * a43 * a44 / 4 + a24 * std::pow( a33, 2 ) * a42 / 4 + a24 * a33 * a42 * a44 / 12 + a24 * a34 * a42 * a43 / 6 + std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 - a33 * a34 * a43 * a44 / 6 + std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) == 0;

    const Scalar p_1_2 = a11 / 4 + a22 / 4 + a33 / 4 + a44 / 4 - sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 + 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) / 2 + sqrt( -4 * a11 * a22 / 3 - 4 * a11 * a33 / 3 - 4 * a11 * a44 / 3 + 4 * a12 * a21 / 3 + 4 * a13 * a31 / 3 + 4 * a14 * a41 / 3 - 4 * a22 * a33 / 3 - 4 * a22 * a44 / 3 + 4 * a23 * a32 / 3 + 4 * a24 * a42 / 3 - 4 * a33 * a44 / 3 + 4 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 2 - 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) + ( -2 * a11 * a22 * a33 - 2 * a11 * a22 * a44 + 2 * a11 * a23 * a32 + 2 * a11 * a24 * a42 - 2 * a11 * a33 * a44 + 2 * a11 * a34 * a43 + 2 * a12 * a21 * a33 + 2 * a12 * a21 * a44 - 2 * a12 * a23 * a31 - 2 * a12 * a24 * a41 - 2 * a13 * a21 * a32 + 2 * a13 * a22 * a31 + 2 * a13 * a31 * a44 - 2 * a13 * a34 * a41 - 2 * a14 * a21 * a42 + 2 * a14 * a22 * a41 - 2 * a14 * a31 * a43 + 2 * a14 * a33 * a41 - 2 * a22 * a33 * a44 + 2 * a22 * a34 * a43 + 2 * a23 * a32 * a44 - 2 * a23 * a34 * a42 - 2 * a24 * a32 * a43 + 2 * a24 * a33 * a42 + 2 * ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) ) / sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 + 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) + 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) / 2;

    const Scalar eigenvalue_1 = eq_1 ? p_1_1 : p_1_2;

    const Scalar p_2_1 = a11 / 4 + a22 / 4 + a33 / 4 + a44 / 4 - sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 - 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1. / 3. ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 ) / 2 - sqrt( -4 * a11 * a22 / 3 - 4 * a11 * a33 / 3 - 4 * a11 * a44 / 3 + 4 * a12 * a21 / 3 + 4 * a13 * a31 / 3 + 4 * a14 * a41 / 3 - 4 * a22 * a33 / 3 - 4 * a22 * a44 / 3 + 4 * a23 * a32 / 3 + 4 * a24 * a42 / 3 - 4 * a33 * a44 / 3 + 4 * a34 * a43 / 3 + 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1. / 3. ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 2 + ( -2 * a11 * a22 * a33 - 2 * a11 * a22 * a44 + 2 * a11 * a23 * a32 + 2 * a11 * a24 * a42 - 2 * a11 * a33 * a44 + 2 * a11 * a34 * a43 + 2 * a12 * a21 * a33 + 2 * a12 * a21 * a44 - 2 * a12 * a23 * a31 - 2 * a12 * a24 * a41 - 2 * a13 * a21 * a32 + 2 * a13 * a22 * a31 + 2 * a13 * a31 * a44 - 2 * a13 * a34 * a41 - 2 * a14 * a21 * a42 + 2 * a14 * a22 * a41 - 2 * a14 * a31 * a43 + 2 * a14 * a33 * a41 - 2 * a22 * a33 * a44 + 2 * a22 * a34 * a43 + 2 * a23 * a32 * a44 - 2 * a23 * a34 * a42 - 2 * a24 * a32 * a43 + 2 * a24 * a33 * a42 + 2 * ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) ) / sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 - 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1. / 3. ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 ) ) / 2;

    const bool eq_2 = std::abs( std::pow( a11, 2 ) * std::pow( a22, 2 ) / 12 - std::pow( a11, 2 ) * a22 * a33 / 12 - std::pow( a11, 2 ) * a22 * a44 / 12 + std::pow( a11, 2 ) * a23 * a32 / 4 + std::pow( a11, 2 ) * a24 * a42 / 4 + std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 - std::pow( a11, 2 ) * a33 * a44 / 12 + std::pow( a11, 2 ) * a34 * a43 / 4 + std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 - a11 * a12 * a21 * a22 / 6 + a11 * a12 * a21 * a33 / 12 + a11 * a12 * a21 * a44 / 12 - a11 * a12 * a23 * a31 / 4 - a11 * a12 * a24 * a41 / 4 - a11 * a13 * a21 * a32 / 4 + a11 * a13 * a22 * a31 / 12 - a11 * a13 * a31 * a33 / 6 + a11 * a13 * a31 * a44 / 12 - a11 * a13 * a34 * a41 / 4 - a11 * a14 * a21 * a42 / 4 + a11 * a14 * a22 * a41 / 12 - a11 * a14 * a31 * a43 / 4 + a11 * a14 * a33 * a41 / 12 - a11 * a14 * a41 * a44 / 6 - a11 * std::pow( a22, 2 ) * a33 / 12 - a11 * std::pow( a22, 2 ) * a44 / 12 + a11 * a22 * a23 * a32 / 12 + a11 * a22 * a24 * a42 / 12 - a11 * a22 * std::pow( a33, 2 ) / 12 + a11 * a22 * a33 * a44 / 2 - 2 * a11 * a22 * a34 * a43 / 3 - a11 * a22 * std::pow( a44, 2 ) / 12 + a11 * a23 * a32 * a33 / 12 - 2 * a11 * a23 * a32 * a44 / 3 + 3 * a11 * a23 * a34 * a42 / 4 + 3 * a11 * a24 * a32 * a43 / 4 - 2 * a11 * a24 * a33 * a42 / 3 + a11 * a24 * a42 * a44 / 12 - a11 * std::pow( a33, 2 ) * a44 / 12 + a11 * a33 * a34 * a43 / 12 - a11 * a33 * std::pow( a44, 2 ) / 12 + a11 * a34 * a43 * a44 / 12 + std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 + a12 * a13 * a21 * a31 / 6 + a12 * a14 * a21 * a41 / 6 + a12 * a21 * a22 * a33 / 12 + a12 * a21 * a22 * a44 / 12 + a12 * a21 * a23 * a32 / 6 + a12 * a21 * a24 * a42 / 6 + a12 * a21 * std::pow( a33, 2 ) / 4 - 2 * a12 * a21 * a33 * a44 / 3 + 7 * a12 * a21 * a34 * a43 / 6 + a12 * a21 * std::pow( a44, 2 ) / 4 - a12 * a22 * a23 * a31 / 4 - a12 * a22 * a24 * a41 / 4 - a12 * a23 * a31 * a33 / 4 + 3 * a12 * a23 * a31 * a44 / 4 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + 3 * a12 * a24 * a33 * a41 / 4 - a12 * a24 * a41 * a44 / 4 + std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 + a13 * a14 * a31 * a41 / 6 - a13 * a21 * a22 * a32 / 4 - a13 * a21 * a32 * a33 / 4 + 3 * a13 * a21 * a32 * a44 / 4 - a13 * a21 * a34 * a42 + a13 * std::pow( a22, 2 ) * a31 / 4 + a13 * a22 * a31 * a33 / 12 - 2 * a13 * a22 * a31 * a44 / 3 + 3 * a13 * a22 * a34 * a41 / 4 + a13 * a23 * a31 * a32 / 6 + 7 * a13 * a24 * a31 * a42 / 6 - a13 * a24 * a32 * a41 + a13 * a31 * a33 * a44 / 12 + a13 * a31 * a34 * a43 / 6 + a13 * a31 * std::pow( a44, 2 ) / 4 - a13 * a33 * a34 * a41 / 4 - a13 * a34 * a41 * a44 / 4 + std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 - a14 * a21 * a22 * a42 / 4 - a14 * a21 * a32 * a43 + 3 * a14 * a21 * a33 * a42 / 4 - a14 * a21 * a42 * a44 / 4 + a14 * std::pow( a22, 2 ) * a41 / 4 + 3 * a14 * a22 * a31 * a43 / 4 - 2 * a14 * a22 * a33 * a41 / 3 + a14 * a22 * a41 * a44 / 12 - a14 * a23 * a31 * a42 + 7 * a14 * a23 * a32 * a41 / 6 + a14 * a24 * a41 * a42 / 6 - a14 * a31 * a33 * a43 / 4 - a14 * a31 * a43 * a44 / 4 + a14 * std::pow( a33, 2 ) * a41 / 4 + a14 * a33 * a41 * a44 / 12 + a14 * a34 * a41 * a43 / 6 + std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 - std::pow( a22, 2 ) * a33 * a44 / 12 + std::pow( a22, 2 ) * a34 * a43 / 4 + std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 - a22 * a23 * a32 * a33 / 6 + a22 * a23 * a32 * a44 / 12 - a22 * a23 * a34 * a42 / 4 - a22 * a24 * a32 * a43 / 4 + a22 * a24 * a33 * a42 / 12 - a22 * a24 * a42 * a44 / 6 - a22 * std::pow( a33, 2 ) * a44 / 12 + a22 * a33 * a34 * a43 / 12 - a22 * a33 * std::pow( a44, 2 ) / 12 + a22 * a34 * a43 * a44 / 12 + std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 + a23 * a24 * a32 * a42 / 6 + a23 * a32 * a33 * a44 / 12 + a23 * a32 * a34 * a43 / 6 + a23 * a32 * std::pow( a44, 2 ) / 4 - a23 * a33 * a34 * a42 / 4 - a23 * a34 * a42 * a44 / 4 + std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 - a24 * a32 * a33 * a43 / 4 - a24 * a32 * a43 * a44 / 4 + a24 * std::pow( a33, 2 ) * a42 / 4 + a24 * a33 * a42 * a44 / 12 + a24 * a34 * a42 * a43 / 6 + std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 - a33 * a34 * a43 * a44 / 6 + std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) == 0;

    const Scalar p_2_2 = a11 / 4 + a22 / 4 + a33 / 4 + a44 / 4 - sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 + 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) / 2 - sqrt( -4 * a11 * a22 / 3 - 4 * a11 * a33 / 3 - 4 * a11 * a44 / 3 + 4 * a12 * a21 / 3 + 4 * a13 * a31 / 3 + 4 * a14 * a41 / 3 - 4 * a22 * a33 / 3 - 4 * a22 * a44 / 3 + 4 * a23 * a32 / 3 + 4 * a24 * a42 / 3 - 4 * a33 * a44 / 3 + 4 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 2 - 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) + ( -2 * a11 * a22 * a33 - 2 * a11 * a22 * a44 + 2 * a11 * a23 * a32 + 2 * a11 * a24 * a42 - 2 * a11 * a33 * a44 + 2 * a11 * a34 * a43 + 2 * a12 * a21 * a33 + 2 * a12 * a21 * a44 - 2 * a12 * a23 * a31 - 2 * a12 * a24 * a41 - 2 * a13 * a21 * a32 + 2 * a13 * a22 * a31 + 2 * a13 * a31 * a44 - 2 * a13 * a34 * a41 - 2 * a14 * a21 * a42 + 2 * a14 * a22 * a41 - 2 * a14 * a31 * a43 + 2 * a14 * a33 * a41 - 2 * a22 * a33 * a44 + 2 * a22 * a34 * a43 + 2 * a23 * a32 * a44 - 2 * a23 * a34 * a42 - 2 * a24 * a32 * a43 + 2 * a24 * a33 * a42 + 2 * ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) ) / sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 + 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) + 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) / 2;

    const Scalar eigenvalue_2 = eq_2 ? p_2_1 : p_2_2;

    const Scalar p_3_1 = a11 / 4 + a22 / 4 + a33 / 4 + a44 / 4 + sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 - 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1 / 3 ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 ) / 2 + sqrt( -4 * a11 * a22 / 3 - 4 * a11 * a33 / 3 - 4 * a11 * a44 / 3 + 4 * a12 * a21 / 3 + 4 * a13 * a31 / 3 + 4 * a14 * a41 / 3 - 4 * a22 * a33 / 3 - 4 * a22 * a44 / 3 + 4 * a23 * a32 / 3 + 4 * a24 * a42 / 3 - 4 * a33 * a44 / 3 + 4 * a34 * a43 / 3 + 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1 / 3 ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 2 - ( -2 * a11 * a22 * a33 - 2 * a11 * a22 * a44 + 2 * a11 * a23 * a32 + 2 * a11 * a24 * a42 - 2 * a11 * a33 * a44 + 2 * a11 * a34 * a43 + 2 * a12 * a21 * a33 + 2 * a12 * a21 * a44 - 2 * a12 * a23 * a31 - 2 * a12 * a24 * a41 - 2 * a13 * a21 * a32 + 2 * a13 * a22 * a31 + 2 * a13 * a31 * a44 - 2 * a13 * a34 * a41 - 2 * a14 * a21 * a42 + 2 * a14 * a22 * a41 - 2 * a14 * a31 * a43 + 2 * a14 * a33 * a41 - 2 * a22 * a33 * a44 + 2 * a22 * a34 * a43 + 2 * a23 * a32 * a44 - 2 * a23 * a34 * a42 - 2 * a24 * a32 * a43 + 2 * a24 * a33 * a42 + 2 * ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) ) / sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 - 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1 / 3 ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 ) ) / 2;

    const bool eq_3 = std::abs( std::pow( a11, 2 ) * std::pow( a22, 2 ) / 12 - std::pow( a11, 2 ) * a22 * a33 / 12 - std::pow( a11, 2 ) * a22 * a44 / 12 + std::pow( a11, 2 ) * a23 * a32 / 4 + std::pow( a11, 2 ) * a24 * a42 / 4 + std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 - std::pow( a11, 2 ) * a33 * a44 / 12 + std::pow( a11, 2 ) * a34 * a43 / 4 + std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 - a11 * a12 * a21 * a22 / 6 + a11 * a12 * a21 * a33 / 12 + a11 * a12 * a21 * a44 / 12 - a11 * a12 * a23 * a31 / 4 - a11 * a12 * a24 * a41 / 4 - a11 * a13 * a21 * a32 / 4 + a11 * a13 * a22 * a31 / 12 - a11 * a13 * a31 * a33 / 6 + a11 * a13 * a31 * a44 / 12 - a11 * a13 * a34 * a41 / 4 - a11 * a14 * a21 * a42 / 4 + a11 * a14 * a22 * a41 / 12 - a11 * a14 * a31 * a43 / 4 + a11 * a14 * a33 * a41 / 12 - a11 * a14 * a41 * a44 / 6 - a11 * std::pow( a22, 2 ) * a33 / 12 - a11 * std::pow( a22, 2 ) * a44 / 12 + a11 * a22 * a23 * a32 / 12 + a11 * a22 * a24 * a42 / 12 - a11 * a22 * std::pow( a33, 2 ) / 12 + a11 * a22 * a33 * a44 / 2 - 2 * a11 * a22 * a34 * a43 / 3 - a11 * a22 * std::pow( a44, 2 ) / 12 + a11 * a23 * a32 * a33 / 12 - 2 * a11 * a23 * a32 * a44 / 3 + 3 * a11 * a23 * a34 * a42 / 4 + 3 * a11 * a24 * a32 * a43 / 4 - 2 * a11 * a24 * a33 * a42 / 3 + a11 * a24 * a42 * a44 / 12 - a11 * std::pow( a33, 2 ) * a44 / 12 + a11 * a33 * a34 * a43 / 12 - a11 * a33 * std::pow( a44, 2 ) / 12 + a11 * a34 * a43 * a44 / 12 + std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 + a12 * a13 * a21 * a31 / 6 + a12 * a14 * a21 * a41 / 6 + a12 * a21 * a22 * a33 / 12 + a12 * a21 * a22 * a44 / 12 + a12 * a21 * a23 * a32 / 6 + a12 * a21 * a24 * a42 / 6 + a12 * a21 * std::pow( a33, 2 ) / 4 - 2 * a12 * a21 * a33 * a44 / 3 + 7 * a12 * a21 * a34 * a43 / 6 + a12 * a21 * std::pow( a44, 2 ) / 4 - a12 * a22 * a23 * a31 / 4 - a12 * a22 * a24 * a41 / 4 - a12 * a23 * a31 * a33 / 4 + 3 * a12 * a23 * a31 * a44 / 4 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + 3 * a12 * a24 * a33 * a41 / 4 - a12 * a24 * a41 * a44 / 4 + std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 + a13 * a14 * a31 * a41 / 6 - a13 * a21 * a22 * a32 / 4 - a13 * a21 * a32 * a33 / 4 + 3 * a13 * a21 * a32 * a44 / 4 - a13 * a21 * a34 * a42 + a13 * std::pow( a22, 2 ) * a31 / 4 + a13 * a22 * a31 * a33 / 12 - 2 * a13 * a22 * a31 * a44 / 3 + 3 * a13 * a22 * a34 * a41 / 4 + a13 * a23 * a31 * a32 / 6 + 7 * a13 * a24 * a31 * a42 / 6 - a13 * a24 * a32 * a41 + a13 * a31 * a33 * a44 / 12 + a13 * a31 * a34 * a43 / 6 + a13 * a31 * std::pow( a44, 2 ) / 4 - a13 * a33 * a34 * a41 / 4 - a13 * a34 * a41 * a44 / 4 + std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 - a14 * a21 * a22 * a42 / 4 - a14 * a21 * a32 * a43 + 3 * a14 * a21 * a33 * a42 / 4 - a14 * a21 * a42 * a44 / 4 + a14 * std::pow( a22, 2 ) * a41 / 4 + 3 * a14 * a22 * a31 * a43 / 4 - 2 * a14 * a22 * a33 * a41 / 3 + a14 * a22 * a41 * a44 / 12 - a14 * a23 * a31 * a42 + 7 * a14 * a23 * a32 * a41 / 6 + a14 * a24 * a41 * a42 / 6 - a14 * a31 * a33 * a43 / 4 - a14 * a31 * a43 * a44 / 4 + a14 * std::pow( a33, 2 ) * a41 / 4 + a14 * a33 * a41 * a44 / 12 + a14 * a34 * a41 * a43 / 6 + std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 - std::pow( a22, 2 ) * a33 * a44 / 12 + std::pow( a22, 2 ) * a34 * a43 / 4 + std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 - a22 * a23 * a32 * a33 / 6 + a22 * a23 * a32 * a44 / 12 - a22 * a23 * a34 * a42 / 4 - a22 * a24 * a32 * a43 / 4 + a22 * a24 * a33 * a42 / 12 - a22 * a24 * a42 * a44 / 6 - a22 * std::pow( a33, 2 ) * a44 / 12 + a22 * a33 * a34 * a43 / 12 - a22 * a33 * std::pow( a44, 2 ) / 12 + a22 * a34 * a43 * a44 / 12 + std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 + a23 * a24 * a32 * a42 / 6 + a23 * a32 * a33 * a44 / 12 + a23 * a32 * a34 * a43 / 6 + a23 * a32 * std::pow( a44, 2 ) / 4 - a23 * a33 * a34 * a42 / 4 - a23 * a34 * a42 * a44 / 4 + std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 - a24 * a32 * a33 * a43 / 4 - a24 * a32 * a43 * a44 / 4 + a24 * std::pow( a33, 2 ) * a42 / 4 + a24 * a33 * a42 * a44 / 12 + a24 * a34 * a42 * a43 / 6 + std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 - a33 * a34 * a43 * a44 / 6 + std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) == 0;

    const Scalar p_3_2 = a11 / 4 + a22 / 4 + a33 / 4 + a44 / 4 + sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 + 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) / 2 + sqrt( -4 * a11 * a22 / 3 - 4 * a11 * a33 / 3 - 4 * a11 * a44 / 3 + 4 * a12 * a21 / 3 + 4 * a13 * a31 / 3 + 4 * a14 * a41 / 3 - 4 * a22 * a33 / 3 - 4 * a22 * a44 / 3 + 4 * a23 * a32 / 3 + 4 * a24 * a42 / 3 - 4 * a33 * a44 / 3 + 4 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 2 - 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - ( -2 * a11 * a22 * a33 - 2 * a11 * a22 * a44 + 2 * a11 * a23 * a32 + 2 * a11 * a24 * a42 - 2 * a11 * a33 * a44 + 2 * a11 * a34 * a43 + 2 * a12 * a21 * a33 + 2 * a12 * a21 * a44 - 2 * a12 * a23 * a31 - 2 * a12 * a24 * a41 - 2 * a13 * a21 * a32 + 2 * a13 * a22 * a31 + 2 * a13 * a31 * a44 - 2 * a13 * a34 * a41 - 2 * a14 * a21 * a42 + 2 * a14 * a22 * a41 - 2 * a14 * a31 * a43 + 2 * a14 * a33 * a41 - 2 * a22 * a33 * a44 + 2 * a22 * a34 * a43 + 2 * a23 * a32 * a44 - 2 * a23 * a34 * a42 - 2 * a24 * a32 * a43 + 2 * a24 * a33 * a42 + 2 * ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) ) / sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 + 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) + 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) / 2;

    const Scalar eigenvalue_3 = eq_3 ? p_3_1 : p_3_2;

    const Scalar p_4_1 = a11 / 4 + a22 / 4 + a33 / 4 + a44 / 4 + sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 - 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1 / 3 ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 ) / 2 - sqrt( -4 * a11 * a22 / 3 - 4 * a11 * a33 / 3 - 4 * a11 * a44 / 3 + 4 * a12 * a21 / 3 + 4 * a13 * a31 / 3 + 4 * a14 * a41 / 3 - 4 * a22 * a33 / 3 - 4 * a22 * a44 / 3 + 4 * a23 * a32 / 3 + 4 * a24 * a42 / 3 - 4 * a33 * a44 / 3 + 4 * a34 * a43 / 3 + 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1 / 3 ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 2 - ( -2 * a11 * a22 * a33 - 2 * a11 * a22 * a44 + 2 * a11 * a23 * a32 + 2 * a11 * a24 * a42 - 2 * a11 * a33 * a44 + 2 * a11 * a34 * a43 + 2 * a12 * a21 * a33 + 2 * a12 * a21 * a44 - 2 * a12 * a23 * a31 - 2 * a12 * a24 * a41 - 2 * a13 * a21 * a32 + 2 * a13 * a22 * a31 + 2 * a13 * a31 * a44 - 2 * a13 * a34 * a41 - 2 * a14 * a21 * a42 + 2 * a14 * a22 * a41 - 2 * a14 * a31 * a43 + 2 * a14 * a33 * a41 - 2 * a22 * a33 * a44 + 2 * a22 * a34 * a43 + 2 * a23 * a32 * a44 - 2 * a23 * a34 * a42 - 2 * a24 * a32 * a43 + 2 * a24 * a33 * a42 + 2 * ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) ) / sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 - 2 * std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 1 / 3 ) + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 ) ) / 2;

    const bool eq_4 = std::abs( std::pow( a11, 2 ) * std::pow( a22, 2 ) / 12 - std::pow( a11, 2 ) * a22 * a33 / 12 - std::pow( a11, 2 ) * a22 * a44 / 12 + std::pow( a11, 2 ) * a23 * a32 / 4 + std::pow( a11, 2 ) * a24 * a42 / 4 + std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 - std::pow( a11, 2 ) * a33 * a44 / 12 + std::pow( a11, 2 ) * a34 * a43 / 4 + std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 - a11 * a12 * a21 * a22 / 6 + a11 * a12 * a21 * a33 / 12 + a11 * a12 * a21 * a44 / 12 - a11 * a12 * a23 * a31 / 4 - a11 * a12 * a24 * a41 / 4 - a11 * a13 * a21 * a32 / 4 + a11 * a13 * a22 * a31 / 12 - a11 * a13 * a31 * a33 / 6 + a11 * a13 * a31 * a44 / 12 - a11 * a13 * a34 * a41 / 4 - a11 * a14 * a21 * a42 / 4 + a11 * a14 * a22 * a41 / 12 - a11 * a14 * a31 * a43 / 4 + a11 * a14 * a33 * a41 / 12 - a11 * a14 * a41 * a44 / 6 - a11 * std::pow( a22, 2 ) * a33 / 12 - a11 * std::pow( a22, 2 ) * a44 / 12 + a11 * a22 * a23 * a32 / 12 + a11 * a22 * a24 * a42 / 12 - a11 * a22 * std::pow( a33, 2 ) / 12 + a11 * a22 * a33 * a44 / 2 - 2 * a11 * a22 * a34 * a43 / 3 - a11 * a22 * std::pow( a44, 2 ) / 12 + a11 * a23 * a32 * a33 / 12 - 2 * a11 * a23 * a32 * a44 / 3 + 3 * a11 * a23 * a34 * a42 / 4 + 3 * a11 * a24 * a32 * a43 / 4 - 2 * a11 * a24 * a33 * a42 / 3 + a11 * a24 * a42 * a44 / 12 - a11 * std::pow( a33, 2 ) * a44 / 12 + a11 * a33 * a34 * a43 / 12 - a11 * a33 * std::pow( a44, 2 ) / 12 + a11 * a34 * a43 * a44 / 12 + std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 + a12 * a13 * a21 * a31 / 6 + a12 * a14 * a21 * a41 / 6 + a12 * a21 * a22 * a33 / 12 + a12 * a21 * a22 * a44 / 12 + a12 * a21 * a23 * a32 / 6 + a12 * a21 * a24 * a42 / 6 + a12 * a21 * std::pow( a33, 2 ) / 4 - 2 * a12 * a21 * a33 * a44 / 3 + 7 * a12 * a21 * a34 * a43 / 6 + a12 * a21 * std::pow( a44, 2 ) / 4 - a12 * a22 * a23 * a31 / 4 - a12 * a22 * a24 * a41 / 4 - a12 * a23 * a31 * a33 / 4 + 3 * a12 * a23 * a31 * a44 / 4 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + 3 * a12 * a24 * a33 * a41 / 4 - a12 * a24 * a41 * a44 / 4 + std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 + a13 * a14 * a31 * a41 / 6 - a13 * a21 * a22 * a32 / 4 - a13 * a21 * a32 * a33 / 4 + 3 * a13 * a21 * a32 * a44 / 4 - a13 * a21 * a34 * a42 + a13 * std::pow( a22, 2 ) * a31 / 4 + a13 * a22 * a31 * a33 / 12 - 2 * a13 * a22 * a31 * a44 / 3 + 3 * a13 * a22 * a34 * a41 / 4 + a13 * a23 * a31 * a32 / 6 + 7 * a13 * a24 * a31 * a42 / 6 - a13 * a24 * a32 * a41 + a13 * a31 * a33 * a44 / 12 + a13 * a31 * a34 * a43 / 6 + a13 * a31 * std::pow( a44, 2 ) / 4 - a13 * a33 * a34 * a41 / 4 - a13 * a34 * a41 * a44 / 4 + std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 - a14 * a21 * a22 * a42 / 4 - a14 * a21 * a32 * a43 + 3 * a14 * a21 * a33 * a42 / 4 - a14 * a21 * a42 * a44 / 4 + a14 * std::pow( a22, 2 ) * a41 / 4 + 3 * a14 * a22 * a31 * a43 / 4 - 2 * a14 * a22 * a33 * a41 / 3 + a14 * a22 * a41 * a44 / 12 - a14 * a23 * a31 * a42 + 7 * a14 * a23 * a32 * a41 / 6 + a14 * a24 * a41 * a42 / 6 - a14 * a31 * a33 * a43 / 4 - a14 * a31 * a43 * a44 / 4 + a14 * std::pow( a33, 2 ) * a41 / 4 + a14 * a33 * a41 * a44 / 12 + a14 * a34 * a41 * a43 / 6 + std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 - std::pow( a22, 2 ) * a33 * a44 / 12 + std::pow( a22, 2 ) * a34 * a43 / 4 + std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 - a22 * a23 * a32 * a33 / 6 + a22 * a23 * a32 * a44 / 12 - a22 * a23 * a34 * a42 / 4 - a22 * a24 * a32 * a43 / 4 + a22 * a24 * a33 * a42 / 12 - a22 * a24 * a42 * a44 / 6 - a22 * std::pow( a33, 2 ) * a44 / 12 + a22 * a33 * a34 * a43 / 12 - a22 * a33 * std::pow( a44, 2 ) / 12 + a22 * a34 * a43 * a44 / 12 + std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 + a23 * a24 * a32 * a42 / 6 + a23 * a32 * a33 * a44 / 12 + a23 * a32 * a34 * a43 / 6 + a23 * a32 * std::pow( a44, 2 ) / 4 - a23 * a33 * a34 * a42 / 4 - a23 * a34 * a42 * a44 / 4 + std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 - a24 * a32 * a33 * a43 / 4 - a24 * a32 * a43 * a44 / 4 + a24 * std::pow( a33, 2 ) * a42 / 4 + a24 * a33 * a42 * a44 / 12 + a24 * a34 * a42 * a43 / 6 + std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 - a33 * a34 * a43 * a44 / 6 + std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) == 0;

    const Scalar p_4_2 = a11 / 4 + a22 / 4 + a33 / 4 + a44 / 4 + sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 + 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) / 2 - sqrt( -4 * a11 * a22 / 3 - 4 * a11 * a33 / 3 - 4 * a11 * a44 / 3 + 4 * a12 * a21 / 3 + 4 * a13 * a31 / 3 + 4 * a14 * a41 / 3 - 4 * a22 * a33 / 3 - 4 * a22 * a44 / 3 + 4 * a23 * a32 / 3 + 4 * a24 * a42 / 3 - 4 * a33 * a44 / 3 + 4 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 2 - 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - ( -2 * a11 * a22 * a33 - 2 * a11 * a22 * a44 + 2 * a11 * a23 * a32 + 2 * a11 * a24 * a42 - 2 * a11 * a33 * a44 + 2 * a11 * a34 * a43 + 2 * a12 * a21 * a33 + 2 * a12 * a21 * a44 - 2 * a12 * a23 * a31 - 2 * a12 * a24 * a41 - 2 * a13 * a21 * a32 + 2 * a13 * a22 * a31 + 2 * a13 * a31 * a44 - 2 * a13 * a34 * a41 - 2 * a14 * a21 * a42 + 2 * a14 * a22 * a41 - 2 * a14 * a31 * a43 + 2 * a14 * a33 * a41 - 2 * a22 * a33 * a44 + 2 * a22 * a34 * a43 + 2 * a23 * a32 * a44 - 2 * a23 * a34 * a42 - 2 * a24 * a32 * a43 + 2 * a24 * a33 * a42 + 2 * ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) ) / sqrt( -2 * a11 * a22 / 3 - 2 * a11 * a33 / 3 - 2 * a11 * a44 / 3 + 2 * a12 * a21 / 3 + 2 * a13 * a31 / 3 + 2 * a14 * a41 / 3 - 2 * a22 * a33 / 3 - 2 * a22 * a44 / 3 + 2 * a23 * a32 / 3 + 2 * a24 * a42 / 3 - 2 * a33 * a44 / 3 + 2 * a34 * a43 / 3 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 4 + 2 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) - 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) + 2 * ( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12 ) / ( 3 * std::pow( sqrt( std::pow( -std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 108 + ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 3 - std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 8, 2 ) / 4 + std::pow( std::pow( -a11, 2 ) * std::pow( a22, 2 ) / 12 + std::pow( a11, 2 ) * a22 * a33 / 12 + std::pow( a11, 2 ) * a22 * a44 / 12 - std::pow( a11, 2 ) * a23 * a32 / 4 - std::pow( a11, 2 ) * a24 * a42 / 4 - std::pow( a11, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a11, 2 ) * a33 * a44 / 12 - std::pow( a11, 2 ) * a34 * a43 / 4 - std::pow( a11, 2 ) * std::pow( a44, 2 ) / 12 + a11 * a12 * a21 * a22 / 6 - a11 * a12 * a21 * a33 / 12 - a11 * a12 * a21 * a44 / 12 + a11 * a12 * a23 * a31 / 4 + a11 * a12 * a24 * a41 / 4 + a11 * a13 * a21 * a32 / 4 - a11 * a13 * a22 * a31 / 12 + a11 * a13 * a31 * a33 / 6 - a11 * a13 * a31 * a44 / 12 + a11 * a13 * a34 * a41 / 4 + a11 * a14 * a21 * a42 / 4 - a11 * a14 * a22 * a41 / 12 + a11 * a14 * a31 * a43 / 4 - a11 * a14 * a33 * a41 / 12 + a11 * a14 * a41 * a44 / 6 + a11 * std::pow( a22, 2 ) * a33 / 12 + a11 * std::pow( a22, 2 ) * a44 / 12 - a11 * a22 * a23 * a32 / 12 - a11 * a22 * a24 * a42 / 12 + a11 * a22 * std::pow( a33, 2 ) / 12 - a11 * a22 * a33 * a44 / 2 + 2 * a11 * a22 * a34 * a43 / 3 + a11 * a22 * std::pow( a44, 2 ) / 12 - a11 * a23 * a32 * a33 / 12 + 2 * a11 * a23 * a32 * a44 / 3 - 3 * a11 * a23 * a34 * a42 / 4 - 3 * a11 * a24 * a32 * a43 / 4 + 2 * a11 * a24 * a33 * a42 / 3 - a11 * a24 * a42 * a44 / 12 + a11 * std::pow( a33, 2 ) * a44 / 12 - a11 * a33 * a34 * a43 / 12 + a11 * a33 * std::pow( a44, 2 ) / 12 - a11 * a34 * a43 * a44 / 12 - std::pow( a12, 2 ) * std::pow( a21, 2 ) / 12 - a12 * a13 * a21 * a31 / 6 - a12 * a14 * a21 * a41 / 6 - a12 * a21 * a22 * a33 / 12 - a12 * a21 * a22 * a44 / 12 - a12 * a21 * a23 * a32 / 6 - a12 * a21 * a24 * a42 / 6 - a12 * a21 * std::pow( a33, 2 ) / 4 + 2 * a12 * a21 * a33 * a44 / 3 - 7 * a12 * a21 * a34 * a43 / 6 - a12 * a21 * std::pow( a44, 2 ) / 4 + a12 * a22 * a23 * a31 / 4 + a12 * a22 * a24 * a41 / 4 + a12 * a23 * a31 * a33 / 4 - 3 * a12 * a23 * a31 * a44 / 4 + a12 * a23 * a34 * a41 + a12 * a24 * a31 * a43 - 3 * a12 * a24 * a33 * a41 / 4 + a12 * a24 * a41 * a44 / 4 - std::pow( a13, 2 ) * std::pow( a31, 2 ) / 12 - a13 * a14 * a31 * a41 / 6 + a13 * a21 * a22 * a32 / 4 + a13 * a21 * a32 * a33 / 4 - 3 * a13 * a21 * a32 * a44 / 4 + a13 * a21 * a34 * a42 - a13 * std::pow( a22, 2 ) * a31 / 4 - a13 * a22 * a31 * a33 / 12 + 2 * a13 * a22 * a31 * a44 / 3 - 3 * a13 * a22 * a34 * a41 / 4 - a13 * a23 * a31 * a32 / 6 - 7 * a13 * a24 * a31 * a42 / 6 + a13 * a24 * a32 * a41 - a13 * a31 * a33 * a44 / 12 - a13 * a31 * a34 * a43 / 6 - a13 * a31 * std::pow( a44, 2 ) / 4 + a13 * a33 * a34 * a41 / 4 + a13 * a34 * a41 * a44 / 4 - std::pow( a14, 2 ) * std::pow( a41, 2 ) / 12 + a14 * a21 * a22 * a42 / 4 + a14 * a21 * a32 * a43 - 3 * a14 * a21 * a33 * a42 / 4 + a14 * a21 * a42 * a44 / 4 - a14 * std::pow( a22, 2 ) * a41 / 4 - 3 * a14 * a22 * a31 * a43 / 4 + 2 * a14 * a22 * a33 * a41 / 3 - a14 * a22 * a41 * a44 / 12 + a14 * a23 * a31 * a42 - 7 * a14 * a23 * a32 * a41 / 6 - a14 * a24 * a41 * a42 / 6 + a14 * a31 * a33 * a43 / 4 + a14 * a31 * a43 * a44 / 4 - a14 * std::pow( a33, 2 ) * a41 / 4 - a14 * a33 * a41 * a44 / 12 - a14 * a34 * a41 * a43 / 6 - std::pow( a22, 2 ) * std::pow( a33, 2 ) / 12 + std::pow( a22, 2 ) * a33 * a44 / 12 - std::pow( a22, 2 ) * a34 * a43 / 4 - std::pow( a22, 2 ) * std::pow( a44, 2 ) / 12 + a22 * a23 * a32 * a33 / 6 - a22 * a23 * a32 * a44 / 12 + a22 * a23 * a34 * a42 / 4 + a22 * a24 * a32 * a43 / 4 - a22 * a24 * a33 * a42 / 12 + a22 * a24 * a42 * a44 / 6 + a22 * std::pow( a33, 2 ) * a44 / 12 - a22 * a33 * a34 * a43 / 12 + a22 * a33 * std::pow( a44, 2 ) / 12 - a22 * a34 * a43 * a44 / 12 - std::pow( a23, 2 ) * std::pow( a32, 2 ) / 12 - a23 * a24 * a32 * a42 / 6 - a23 * a32 * a33 * a44 / 12 - a23 * a32 * a34 * a43 / 6 - a23 * a32 * std::pow( a44, 2 ) / 4 + a23 * a33 * a34 * a42 / 4 + a23 * a34 * a42 * a44 / 4 - std::pow( a24, 2 ) * std::pow( a42, 2 ) / 12 + a24 * a32 * a33 * a43 / 4 + a24 * a32 * a43 * a44 / 4 - a24 * std::pow( a33, 2 ) * a42 / 4 - a24 * a33 * a42 * a44 / 12 - a24 * a34 * a42 * a43 / 6 - std::pow( a33, 2 ) * std::pow( a44, 2 ) / 12 + a33 * a34 * a43 * a44 / 6 - std::pow( a34, 2 ) * std::pow( a43, 2 ) / 12, 3 ) / 27 ) + std::pow( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8, 3 ) / 216 - ( a11 * a22 + a11 * a33 + a11 * a44 - a12 * a21 - a13 * a31 - a14 * a41 + a22 * a33 + a22 * a44 - a23 * a32 - a24 * a42 + a33 * a44 - a34 * a43 - 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ) * ( a11 * a22 * a33 * a44 - a11 * a22 * a34 * a43 - a11 * a23 * a32 * a44 + a11 * a23 * a34 * a42 + a11 * a24 * a32 * a43 - a11 * a24 * a33 * a42 - a12 * a21 * a33 * a44 + a12 * a21 * a34 * a43 + a12 * a23 * a31 * a44 - a12 * a23 * a34 * a41 - a12 * a24 * a31 * a43 + a12 * a24 * a33 * a41 + a13 * a21 * a32 * a44 - a13 * a21 * a34 * a42 - a13 * a22 * a31 * a44 + a13 * a22 * a34 * a41 + a13 * a24 * a31 * a42 - a13 * a24 * a32 * a41 - a14 * a21 * a32 * a43 + a14 * a21 * a33 * a42 + a14 * a22 * a31 * a43 - a14 * a22 * a33 * a41 - a14 * a23 * a31 * a42 + a14 * a23 * a32 * a41 - ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 * a33 / 4 - a11 * a22 * a44 / 4 + a11 * a23 * a32 / 4 + a11 * a24 * a42 / 4 - a11 * a33 * a44 / 4 + a11 * a34 * a43 / 4 + a12 * a21 * a33 / 4 + a12 * a21 * a44 / 4 - a12 * a23 * a31 / 4 - a12 * a24 * a41 / 4 - a13 * a21 * a32 / 4 + a13 * a22 * a31 / 4 + a13 * a31 * a44 / 4 - a13 * a34 * a41 / 4 - a14 * a21 * a42 / 4 + a14 * a22 * a41 / 4 - a14 * a31 * a43 / 4 + a14 * a33 * a41 / 4 - a22 * a33 * a44 / 4 + a22 * a34 * a43 / 4 + a23 * a32 * a44 / 4 - a23 * a34 * a42 / 4 - a24 * a32 * a43 / 4 + a24 * a33 * a42 / 4 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 16 - a11 * a33 / 16 - a11 * a44 / 16 + a12 * a21 / 16 + a13 * a31 / 16 + a14 * a41 / 16 - a22 * a33 / 16 - a22 * a44 / 16 + a23 * a32 / 16 + a24 * a42 / 16 - a33 * a44 / 16 + a34 * a43 / 16 + 3 * std::pow( -a11 - a22 - a33 - a44, 2 ) / 256 ) ) ) / 6 + std::pow( -a11 * a22 * a33 - a11 * a22 * a44 + a11 * a23 * a32 + a11 * a24 * a42 - a11 * a33 * a44 + a11 * a34 * a43 + a12 * a21 * a33 + a12 * a21 * a44 - a12 * a23 * a31 - a12 * a24 * a41 - a13 * a21 * a32 + a13 * a22 * a31 + a13 * a31 * a44 - a13 * a34 * a41 - a14 * a21 * a42 + a14 * a22 * a41 - a14 * a31 * a43 + a14 * a33 * a41 - a22 * a33 * a44 + a22 * a34 * a43 + a23 * a32 * a44 - a23 * a34 * a42 - a24 * a32 * a43 + a24 * a33 * a42 + ( -a11 - a22 - a33 - a44 ) * ( -a11 * a22 / 2 - a11 * a33 / 2 - a11 * a44 / 2 + a12 * a21 / 2 + a13 * a31 / 2 + a14 * a41 / 2 - a22 * a33 / 2 - a22 * a44 / 2 + a23 * a32 / 2 + a24 * a42 / 2 - a33 * a44 / 2 + a34 * a43 / 2 + std::pow( -a11 - a22 - a33 - a44, 2 ) / 8 ), 2 ) / 16, 1 / 3 ) ) ) / 2;

    const Scalar eigenvalue_4 = eq_4 ? p_4_1 : p_4_2;

    Vector ret( 4 );
    ret << eigenvalue_1, eigenvalue_2, eigenvalue_3, eigenvalue_4;

    return ret;
}